CREATE DATABASE PROJECT;
USE PROJECT;
SELECT*FROM ORDERS;
SELECT*FROM BUDGET;

-- 1) HOW MANY ORDERS ARE PLACED?
SELECT COUNT(ROW_ID) FROM ORDERS;

-- 2) WHICH ARE THE DIFFERNT TYPES OF STATES FROM THE ORDERS ARE PLACED ? 
SELECT DISTINCT STATE FROM ORDERS;

-- 3) WHAT ARE THE DIFFERNT TYPES OF PRODUCTS ARE ORDERD?
SELECT DISTINCT SUB_CATEGORY FROM ORDERS;

-- 4) HOW MANY STATES ARE THEIR FROM THE ORDERS ARE PLACED?
SELECT COUNT(STATE) FROM ORDERS;

-- 5) FIND THE CUSTOMERS WHO ORDERED FROM EAST REGION FOR SERVICING SEGMENT
SELECT DISTINCT CUSTOMER_NAME FROM ORDERS WHERE SEGMENT="SERVICING" AND REGION="EAST";

-- 6) FIND THE CUSTOMERS WHO GOT 0 DISCOUNT AFTER BUYING MORE THAN 8 QUANTITYES
SELECT DISTINCT CUSTOMER_NAME FROM ORDERS WHERE DISCOUNT LIKE 0 AND QUANTITY>8;

-- 7) FIND THE ORDERS WHO GOT THE DISCOUNT BETWEEN 0.4 TO 0.8
SELECT*FROM ORDERS WHERE DISCOUNT BETWEEN 0.4 AND 0.8;

-- 8) GET THE ORDER DETAILS THAT HAS BEEN ORDERED FROM SAN FRANCISCO AND LOS ANGELES
SELECT*FROM ORDERS WHERE CITY IN ("San Francisco","LOS ANGELES");

-- 9) GET THE ORDER DETAILS THAT HAS BEEN ORDERD BY THIRD PARTY CATEGORY AND NOT HAS BEEN SHIPED IN STANDARD CLASS
SELECT*FROM ORDERS WHERE SHIP_MODE NOT IN ("STANDARD CLASS") AND CATEGORY LIKE "THIRD PARTY";

-- 10) GET THE ORDER DETAILS THAT PRODUCT ID  WHICH IS HAVING FURNITURES
SELECT*FROM ORDERS WHERE PRODUCT_ID LIKE "FUR%";

-- 11) GET THE TOP FIVE SALES ORDER DETAILS 
SELECT ORDER_ID, CUSTOMER_ID, CATEGORY, SUB_CATEGORY, SALES FROM ORDERS ORDER BY SALES DESC LIMIT 5;

-- 12) GET THE TOP FIVE SEGMENT AND STATE WHERE THE PROFIT IS LESS
SELECT STATE, SEGMENT, PROFIT FROM ORDERS ORDER BY PROFIT ASC LIMIT 5;

-- 13) GET THE TOP 5 ORDER DETAILS  THAT ARE HAVING SECOND CLASS SHIP_MODE
SELECT*FROM ORDERS WHERE SHIP_MODE = "SECOND CLASS" ORDER BY PROFIT DESC LIMIT 5;

-- 14) GET THE TOP 10 STATES THAT ARE HAVING TOP SALES AND AVERAGE PROFIT WITH RESPECT TO SUB_CATEGORY
SELECT STATE,SUB_CATEGORY,SALES,AVG(PROFIT) AS AVG_PROFIT FROM ORDERS GROUP BY STATE,SUB_CATEGORY,SALES ORDER BY SALES DESC LIMIT 10;

-- 15) GET THE ORDER ID OF CITIES THAT HAVE ORDERED PAPER IN FIRST CLASS SHIPING
SELECT ORDER_ID,SHIP_MODE,CITY,POSTAL_CODE,STATE FROM ORDERS WHERE SUB_CATEGORY="PAPER"AND SHIP_MODE="FIRST CLASS" GROUP BY ORDER_ID,SHIP_MODE,CITY,POSTAL_CODE,STATE;

-- 16) WHICH TOP 3 STATES HAVE ORDERED DIFFERENT PRODUCTS UNDER REPLACEMENT CATEGORY 
SELECT SEGMENT,SUB_CATEGORY,STATE FROM ORDERS WHERE SEGMENT= "REPLACEMENT" GROUP BY SEGMENT,STATE,SUB_CATEGORY ORDER BY STATE DESC LIMIT 3;

-- 17) GET THE AVERAGE PROFIT OF THE PRODUCTS THAT HAS BEEN SOLD MORE THAN 1000 QUANTITES
SELECT SUB_CATEGORY, AVG(PROFIT),COUNT(QUANTITY) FROM ORDERS GROUP BY SUB_CATEGORY HAVING count(QUANTITY)>1000;

-- 18) GET THE TOTAL SALES OF ART SUB_CATEGORY
SELECT SUM(SALES) AS TOTAL_SALES FROM ORDERS WHERE SUB_CATEGORY ="ART"; 

-- 19)FIND THE ALL INFORMATION OF ORDER WHICH IS HAVING HIGHEST SALES
SELECT*FROM ORDERS WHERE SALES=(SELECT MAX(SALES)FROM ORDERS);

-- 20) FIND ALL THE ORDERS THAT HAVE PROFIT HIGHER THAN AVERAGE PROFIT OF ORDERS IN THE SAME CATEGORY
SELECT*FROM ORDERS O1 WHERE PROFIT>(SELECT AVG(PROFIT) FROM ORDERS O2 WHERE O1.CATEGORY=O2.CATEGORY);

-- 21) GIVE THE RANKING TO THE SUB_CATEGORY WITH RESPECT TO PROFIT
SELECT*,RANK() OVER (PARTITION BY SUB_CATEGORY ORDER BY PROFIT DESC) AS RANKING FROM ORDERS;

-- 22) FIND ALL THE ORDERS BETWEEN 1/1/2022 TO 1/2/2022
SELECT*FROM ORDERS WHERE SHIP_DATE BETWEEN "1/1/2022" AND "1/2/2022";
